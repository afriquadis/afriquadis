version: '3.8'

services:
  # Application principale
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    image: afriquadis-bilan-express:production
    container_name: afriquadis-app-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    env_file:
      - env.production
    depends_on:
      - postgres
      - redis
    networks:
      - afriquadis-prod
    volumes:
      - app-logs:/app/logs
      - app-uploads:/app/uploads
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Base de donn√©es PostgreSQL de production
  postgres:
    image: postgres:15-alpine
    container_name: afriquadis-postgres-prod
    restart: unless-stopped
    environment:
      - POSTGRES_DB=afriquadis_production
      - POSTGRES_USER=afriquadis_prod
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./prisma/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - afriquadis-prod
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U afriquadis_prod -d afriquadis_production"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cache Redis de production
  redis:
    image: redis:7-alpine
    container_name: afriquadis-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - afriquadis-prod
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: afriquadis-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - afriquadis-prod
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Monitoring Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: afriquadis-prometheus-prod
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - afriquadis-prod

  # Monitoring Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: afriquadis-grafana-prod
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - afriquadis-prod

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  app-logs:
    driver: local
  app-uploads:
    driver: local
  nginx-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  afriquadis-prod:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
